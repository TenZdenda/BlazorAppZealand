@layout AdminLayout
@page "/admin/contacts/add"
@using Newtonsoft.Json
@using System.Text
@using System.Net.Http.Headers
@using BlazorAppZealand.Models
@inject HttpClient HttpClient
@inject NavigationManager NavManager
@inject ToastService toastService
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage BrowserStorage

<PageTitle>Add contact</PageTitle>

<div class="space-y-10">
    <div>
        <NavLink href="/admin/contacts">
            <span class="flex items-center space-x-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75" />
                </svg>
                <span>Go back</span>
            </span>
        </NavLink>
        
        <h2 class="text-lg font-medium text-gray-900 mt-10">Add new contact</h2>
        
        <EditForm Model=@Contact class="space-y-16" OnValidSubmit=@CreateContact>
            <DataAnnotationsValidator />

            <div class="mt-10 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4">
                <div>
                    <label for="first-name" class="block text-sm font-medium text-gray-700">First name</label>
                    <div class="mt-1">
                        <InputText @bind-Value="Contact.First_Name" placeholder="John" type="text" id="first-name" name="first-name" class="px-3 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                        <ValidationMessage class="text-red-600 block font-light mt-2" For="@(() => Contact.First_Name)" />
                    </div>
                </div>

                <div>
                    <label for="last-name" class="block text-sm font-medium text-gray-700">Last name</label>
                    <div class="mt-1">
                        <InputText @bind-Value="Contact.Last_Name" placeholder="Doe" type="text" id="last-name" name="last-name" class="px-3 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                        <ValidationMessage class="text-red-600 block font-light mt-2" For="@(() => Contact.Last_Name)" />
                    </div>
                </div>

                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                    <div class="mt-1">
                        <InputText @bind-Value="Contact.Email" placeholder="johndoe@example.com" type="email" name="email" id="email" class="px-3 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                        <ValidationMessage class="text-red-600 block font-light mt-2" For="@(() => Contact.Email)" />
                    </div>
                </div>

                <div>
                    <label for="phone" class="block text-sm font-medium text-gray-700">Phone</label>
                    <div class="mt-1">
                        <InputText @bind-Value="Contact.Phone" placeholder="+45 11 22 33 44" type="text" name="phone" id="phone" class="px-3 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                        <ValidationMessage class="text-red-600 block font-light mt-2" For="@(() => Contact.Phone)" />
                    </div>
                </div>

                <div>
                    <label for="secondary-email" class="block text-sm font-medium text-gray-700">Sec. Email</label>
                    <div class="mt-1">
                        <InputText @bind-Value="Contact.Secondary_Email" placeholder="johndoe2@example.com" type="email" name="secondary-email" id="secondary-email" class="px-3 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                        <ValidationMessage class="text-red-600 block font-light mt-2" For="@(() => Contact.Secondary_Email)" />
                    </div>
                </div>

                <div>
                    <label for="mobile" class="block text-sm font-medium text-gray-700">Mobile</label>
                    <div class="mt-1">
                        <InputText @bind-Value="Contact.Mobile" placeholder="+45 44 33 22 11" type="text" name="mobile" id="mobile" class="px-3 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                        <ValidationMessage class="text-red-600 block font-light mt-2" For="@(() => Contact.Mobile)" />
                    </div>
                </div>

                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
                    <div class="mt-1">
                        <InputText @bind-Value="Contact.Title" placeholder="Product Engineer" type="text" name="title" id="title" class="px-3 py-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" />
                        <ValidationMessage class="text-red-600 block font-light mt-2" For="@(() => Contact.Title)" />
                    </div>
                </div>
            </div>
            
            <input type="submit" class="max-w-[14rem] w-full text-center bg-black text-white px-10 py-3 rounded" value="Create contact"/>
        </EditForm>
    </div>
</div>

@code {
    Contact Contact = new Contact();
    
    public string? accountId;
    
    protected override async Task OnInitializedAsync()
    {
        var result = await BrowserStorage.GetAsync<string>("accountId");
        accountId = result.Success ? result.Value : "";

        Contact.Account_Name = new AccountName() { Id = accountId };
    }
    
    private async Task CreateContact()
    {
        var postBody = new
        {
            data = new []
            {
                Contact
            }  
        };
        
        var json = JsonConvert.SerializeObject(postBody);

        var response = await HttpClient.PostAsync(
            "https://www.zohoapis.eu/crm/v3/Contacts",
            new StringContent(json, Encoding.UTF8, "application/json")
        );
        var responseData = await response.Content.ReadAsStringAsync();

        if (response.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/admin/contacts");
            toastService.ShowToast("Contact successfully created!", ToastLevel.Success, "add");
        }
    }

}

@layout AdminLayout
@page "/admin/contacts"
@using BlazorAppZealand.Models
@using Newtonsoft.Json
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject ToastService toastService
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage BrowserStorage

<PageTitle>Contacts</PageTitle>

<div>
    <div class="px-4 sm:px-6 lg:px-8">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
                <h1 class="text-xl font-semibold text-gray-900">Contacts</h1>
            </div>
            <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
                <a href="/admin/contacts/add" class="inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto">
                    Add contact
                </a>
            </div>
        </div>
        @if (_contacts != null)
        {
            <div class="mt-8 flex flex-col">
                <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                        <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                            <table class="min-w-full divide-y divide-gray-300">
                                <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">First name</th>
                                    <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">Last name</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Email</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Phone</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Sec. Email</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Mobile</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Title</th>
                                    <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                                        <span class="sr-only">Edit</span>
                                    </th>
                                </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200 bg-white">
                                @foreach (var contact in _contacts)
                                {
                                    @if (contact.Account_Name != null && contact.Account_Name.id == accountId)
                                    {
                                        <tr>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contact.First_Name</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contact.Last_Name</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contact.Email</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contact.Phone</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contact.Secondary_Email</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contact.Mobile</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@contact.Title</td>
                                            <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                                                <div class="flex items-center space-x-4">
                                                    <button @onclick="() => EditContact(contact.id)" href="/admin/contacts/edit/@contact.id" class="text-indigo-600 hover:text-indigo-900">
                                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                                            <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"/>
                                                        </svg>
                                                        <span class="sr-only">, @contact.First_Name</span>
                                                    </button>
                                                    <button @onclick="() => OpenDialog(contact.id, contact.Email)">
                                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                                            <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0"/>
                                                        </svg>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <Dialog
        IsVisible="@DialogIsOpen"
        Title="Deactivate contact"
        Message="@message"
        OnClose="@OnDialogClose"
    ></Dialog>
</div>

@code {

    // https://jsonplaceholder.typicode.com/users

    List<Contact> _contacts = new List<Contact>();

    private string idContact;
    private string message;

    private string accountId;
    
    private bool DialogIsOpen = false;

    protected override async Task OnInitializedAsync()
    {
        // HttpClient.DefaultRequestHeaders.Add("Authorization", "Zoho-oauthtoken 1000.67dacd1650959512ee124a7f5df5f1e2.d9ded36fb7722b11ffd83754bfae4a53");
        var httpResponse = await HttpClient.GetAsync("https://www.zohoapis.eu/crm/v3/Contacts?fields=First_Name,Last_Name,Email,Phone,Mobile,Title,Secondary_Email,Account_Name");

        if (httpResponse.IsSuccessStatusCode)
        {
            Response responseData = JsonConvert.DeserializeObject<Response>(await httpResponse.Content.ReadAsStringAsync());
            _contacts = responseData.Contacts;
        }
        
        var result = await BrowserStorage.GetAsync<string>("accountId");
        accountId = result.Success ? result.Value : "";
    }
    
    private void OpenDialog(string id, string email)
    {
        DialogIsOpen = true;
        idContact = id;
        message = "Are you sure you want to deactivate this contact \""
                  + email + "\"?";
    }
    
    private async Task OnDialogClose(bool isOk)
    {
        if (isOk)
        {
            await DeleteContact(idContact);
        }
        
        DialogIsOpen = false;
    }

    private async Task DeleteContact(string id)
    {
        var httpResponse = await HttpClient.DeleteAsync("https://www.zohoapis.eu/crm/v3/Contacts/" + id);

        if (httpResponse.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
            toastService.ShowToast("Contact successfully deleted!", ToastLevel.Success, "delete");
        }
    }

    private void EditContact(string id)
    {
        NavigationManager.NavigateTo($"/admin/contacts/edit/{id}");
    }

}